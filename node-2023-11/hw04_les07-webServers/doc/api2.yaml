openapi: 3.0.3
info:
  title: Swagger Best Courses Ever
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    
  version: 0.0.1
servers:
  - url: https://localhost:3000/
tags:
  - name: admin
    description: Административные операции 
  - name: user
    description: Операции над пользователями
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io



paths:
  /admin/users:
    get:
      tags:
        - admin
      summary: Получить административный список рользователей (с паролями))
      description: Данная операция доступна только авторизованному администратору
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'    
    post:
      tags:
        - admin
      summary: Create user
      description: Данная операция доступна только авторизованному администратору
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserToCreate'
          application/xml:
            schema:
              $ref: '#/components/schemas/UserToCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserToCreate'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'

    delete:
      tags:
        - admin
      summary: Deletes a pet
      description: delete a pet
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: petId
          in: path
          description: Pet id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid pet value
      security:
        - petstore_auth:
            - write:pets
            - read:pets

  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          format: mongoose.SchemaTypes.ObjectId
          example: 65ac3ce9dfb85263bcf53829
        name:
          type: string
          example: Peter
        login:
          type: string
          example: peter
        pass:
          type: string
          example: '12345'
      xml:
        name: user

    UserToCreate:
      type: object
      properties:
        name:
          type: string
          example: Peter
        login:
          type: string
          example: peter
        pass:
          type: string
          example: '12345'
      xml:
        name: user

  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://petstore3.swagger.io/oauth/authorize
          scopes:
            write:pets: modify pets in your account
            read:pets: read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header